# Generated by Django 5.0.1 on 2024-02-16 17:14

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ControlPanelModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'Модели ППКОП',
            },
        ),
        migrations.CreateModel(
            name='ManufacturerCCTV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ManufacturerFSS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ManufacturerNetDev',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_name', models.CharField(max_length=100)),
                ('legal_address', models.CharField(max_length=100)),
                ('inn', models.CharField(max_length=100)),
                ('bank', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Persons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=80)),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message='Введите Российский телефонный номер в формате 10 цифр: 9998887766. Подойдут любые общепринятые форматы записи телефонного номера', regex='^([+]?7|8)?([ -(]?\\d{3}[ -)]?)((?:\\d[ -]?){7})$')])),
                ('position', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SystemTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=80)),
                ('abbr', models.CharField(max_length=30)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TypeCCTV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TypeFSS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TypeNetDev',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ControlPanel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_pass', models.CharField(max_length=30)),
                ('operator_pass', models.CharField(max_length=30)),
                ('serial_number', models.CharField(max_length=50)),
                ('hw_version', models.CharField(max_length=50)),
                ('sw_version', models.CharField(max_length=50)),
                ('configuration_file', models.FileField(upload_to='')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.controlpanelmodel', verbose_name='ППКОП')),
            ],
        ),
        migrations.AddField(
            model_name='controlpanelmodel',
            name='aps_system_manufacturer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.manufacturerfss'),
        ),
        migrations.CreateModel(
            name='LCObjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=120)),
                ('organization_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.organizations')),
                ('contact_person', models.ManyToManyField(to='objects_db.persons')),
            ],
        ),
        migrations.CreateModel(
            name='Systems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('documentation_path', models.FileField(upload_to='')),
                ('id_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.lcobjects')),
                ('id_system_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.systemtypes')),
            ],
        ),
        migrations.CreateModel(
            name='NWD_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=50)),
                ('nwd_manufacturer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.manufacturernetdev')),
                ('id_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.systems')),
                ('type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.typenetdev')),
            ],
            options={
                'db_table': 'Модели сетевых устройств',
            },
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50)),
                ('version', models.CharField(max_length=50)),
                ('mac_address', models.CharField(blank=True, max_length=50, validators=[django.core.validators.RegexValidator(message='Введите валидный MAC-адрес из шести пар символов, слитно, либо попарно разделенных пробелами/тире/двоеточием', regex='^(?:[a-fA-F0-9]{2}[ :-]?){5}[a-fA-F0-9]{2}$')])),
                ('configuration_file', models.FileField(upload_to='')),
                ('ip_address', models.GenericIPAddressField(protocol='IPv4')),
                ('ip_mask', models.GenericIPAddressField(protocol='IPv4')),
                ('admin_login', models.CharField(max_length=50)),
                ('admin_pass', models.CharField(max_length=50)),
                ('id_network_device_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.nwd_model')),
                ('id_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.systems')),
            ],
        ),
        migrations.CreateModel(
            name='CCTVRecorder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=50)),
                ('admin_login', models.CharField(max_length=50)),
                ('admin_pass', models.CharField(max_length=50)),
                ('ip_address', models.GenericIPAddressField(protocol='IPv4')),
                ('ip_mask', models.GenericIPAddressField(protocol='IPv4')),
                ('mac_address', models.CharField(blank=True, max_length=50, validators=[django.core.validators.RegexValidator(message='Введите валидный MAC-адрес из шести пар символов, слитно, либо попарно разделенных пробелами/тире/двоеточием', regex='^(?:[a-fA-F0-9]{2}[ :-]?){5}[a-fA-F0-9]{2}$')])),
                ('serial_number', models.CharField(max_length=50)),
                ('id_cctv_system_manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.manufacturercctv')),
                ('id_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.systems')),
                ('id_cctv_system_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.typecctv')),
            ],
        ),
        migrations.CreateModel(
            name='CCTVCamera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=50)),
                ('serial_number', models.CharField(max_length=50)),
                ('mac_address', models.CharField(blank=True, max_length=50, validators=[django.core.validators.RegexValidator(message='Введите валидный MAC-адрес из шести пар символов, слитно, либо попарно разделенных пробелами/тире/двоеточием', regex='^(?:[a-fA-F0-9]{2}[ :-]?){5}[a-fA-F0-9]{2}$')])),
                ('ip_address', models.GenericIPAddressField(protocol='IPv4')),
                ('ip_mask', models.GenericIPAddressField(protocol='IPv4')),
                ('admin_login', models.CharField(max_length=50)),
                ('admin_pass', models.CharField(max_length=50)),
                ('id_videorecorder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.cctvrecorder')),
                ('id_cctv_system_manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.manufacturercctv')),
                ('id_cctv_system_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.typecctv')),
            ],
        ),
        migrations.AddField(
            model_name='controlpanelmodel',
            name='type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects_db.typefss'),
        ),
    ]
